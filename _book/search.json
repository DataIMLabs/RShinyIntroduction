[
  {
    "objectID": "mod2_datatableijby.html",
    "href": "mod2_datatableijby.html",
    "title": "5  Basisbewerkingen",
    "section": "",
    "text": "5.1 Subsetting",
    "crumbs": [
      "Module 2 - Data.table",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Basisbewerkingen</span>"
    ]
  },
  {
    "objectID": "mod2_datatableijby.html#samenvatten",
    "href": "mod2_datatableijby.html#samenvatten",
    "title": "5  Basisbewerkingen",
    "section": "5.2 Samenvatten",
    "text": "5.2 Samenvatten",
    "crumbs": [
      "Module 2 - Data.table",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Basisbewerkingen</span>"
    ]
  },
  {
    "objectID": "mod2_datatableijby.html#aanmaken-of-wijzigen-variabelen",
    "href": "mod2_datatableijby.html#aanmaken-of-wijzigen-variabelen",
    "title": "5  Basisbewerkingen",
    "section": "5.3 Aanmaken of wijzigen variabelen",
    "text": "5.3 Aanmaken of wijzigen variabelen",
    "crumbs": [
      "Module 2 - Data.table",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Basisbewerkingen</span>"
    ]
  },
  {
    "objectID": "mod2_datatableijby.html#groeperen",
    "href": "mod2_datatableijby.html#groeperen",
    "title": "5  Basisbewerkingen",
    "section": "5.4 Groeperen",
    "text": "5.4 Groeperen",
    "crumbs": [
      "Module 2 - Data.table",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Basisbewerkingen</span>"
    ]
  },
  {
    "objectID": "mod4_fp.html",
    "href": "mod4_fp.html",
    "title": "7  Functioneel Programmeren",
    "section": "",
    "text": "7.1 apply Functies in base R",
    "crumbs": [
      "Module 4 - Gevanceerd R-gebruik",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Functioneel Programmeren</span>"
    ]
  },
  {
    "objectID": "mod4_fp.html#map-functies-in-purrr",
    "href": "mod4_fp.html#map-functies-in-purrr",
    "title": "7  Functioneel Programmeren",
    "section": "7.2 map Functies in purrr",
    "text": "7.2 map Functies in purrr\nDe `map` functies zijn essentieel binnen `purrr` voor het toepassen van een bewerking op elk element van een lijst of vector, zonder expliciet een lus te gebruiken. Dit maakt de code efficiënter en leesbaarder.\nVoorbeeld: Toepassen van `map` Functies\nStel, we hebben een lijst met numerieke vectoren en willen het gemiddelde van elk berekenen:\nlibrary(purrr) nummeriekeLijst \\&lt;- list(c(1, 2, 3), c(4, 5, 6), c(7, 8, 9))s\n\ngemiddelden \\&lt;- map_dbl(nummeriekeLijst, mean)\n\nprint(gemiddelden)",
    "crumbs": [
      "Module 4 - Gevanceerd R-gebruik",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Functioneel Programmeren</span>"
    ]
  },
  {
    "objectID": "mod5_basicshinyintro.html",
    "href": "mod5_basicshinyintro.html",
    "title": "Module 5 - Basis Shiny",
    "section": "",
    "text": "Server vs UI",
    "crumbs": [
      "Module 5 - Basis Shiny"
    ]
  },
  {
    "objectID": "mod5_basicshinyintro.html#reactivute",
    "href": "mod5_basicshinyintro.html#reactivute",
    "title": "Module 5 - Basis Shiny",
    "section": "Reactivute",
    "text": "Reactivute",
    "crumbs": [
      "Module 5 - Basis Shiny"
    ]
  },
  {
    "objectID": "mod3_plotlyintro.html",
    "href": "mod3_plotlyintro.html",
    "title": "Module 3 - Charts met Plotly",
    "section": "",
    "text": "Data visualisatie is een essentiële vaardigheid binnen data-analyse en wetenschappelijke communicatie. Het stelt ons in staat om complexe informatie en relaties tussen variabelen op een intuïtieve en toegankelijke manier over te brengen. Door data visueel weer te geven, kunnen we patronen, trends en outliers in datasets identificeren die mogelijk niet onmiddellijk duidelijk zijn uit ruwe data of statistische analyses. Visualisaties faciliteren ook de communicatie van bevindingen naar een breed publiek, inclusief diegenen zonder technische achtergrond.\nOverzicht van grafiektypen en hun toepassingen Er zijn verschillende soorten grafieken die gebruikt kunnen worden afhankelijk van het type data en de boodschap die je wilt overbrengen.\nEnkele van de meest gebruikte grafieken zijn:\n\nStaafdiagrammen: Geschikt voor het vergelijken van hoeveelheden tussen verschillende categorieën.\nLijndiagrammen: Ideaal voor het tonen van trends over tijd.\nScatterplots: Nuttig voor het weergeven van de relatie tussen twee kwantitatieve variabelen.\nBox-plots: Bieden een visuele samenvatting van de verdeling van een dataset, inclusief medianen, kwartielen en outliers.\n\n\nlibrary(plotly)\n\n# Voorbeeld dataset\nset.seed(123)\nxData &lt;- rnorm(100)\nyData &lt;- rnorm(100, mean = xData)\n\n# Scatterplot maken met Plotly\nplot_ly(x = ~xData, y = ~yData, type = 'scatter', mode = 'markers')",
    "crumbs": [
      "Module 3 - Charts met Plotly"
    ]
  },
  {
    "objectID": "mod1_basis.html",
    "href": "mod1_basis.html",
    "title": "Module 1 - Basis R",
    "section": "",
    "text": "In deze les verkennen we de basisconcepten van R die essentieel zijn voor data-analyse, data-manipulatie en het opzetten van dashboards in Shiny. We behandelen het werken met variabelen, operatoren en functies, de verschillende datatypes in R, het ophalen van elementen uit collecties (subsetting) en voorwaardelijke- en herhaalde uitvoer van code (flow-control).\nOnze ervaring is dat de gemiddelde datawetenschapper een zekere ervaring zal hebben met bovengenoemde concepten. Voor een goed begrip van de hiernavolgende modules is het evenwel van belang dat de hier beschreven zaken met zorg worden besturdeerd: bij het opzetten van geavanceerde Shiny dashboards zullen we veel vuldig teruggrijpen om de hier omschreven basisprincipes.",
    "crumbs": [
      "Module 1 - Basis R"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introductie R en Shiny",
    "section": "",
    "text": "Index",
    "crumbs": [
      "Index"
    ]
  },
  {
    "objectID": "mod1_variables.html",
    "href": "mod1_variables.html",
    "title": "2  Variablen, operatoren en functies.",
    "section": "",
    "text": "2.1 Variabelen\nEen variabele is een verwijzing naar een waarde in het geheugden van de computer. We gebruiken de (binaire) toewijzingsoperator &lt;- of -&gt; om waarden toe te wijzen aan variabelen.",
    "crumbs": [
      "Module 1 - Basis R",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Variablen, operatoren en functies.</span>"
    ]
  },
  {
    "objectID": "mod1_variables.html#variabelen",
    "href": "mod1_variables.html#variabelen",
    "title": "2  Variablen, operatoren en functies.",
    "section": "",
    "text": "2.1.1 Mutabiliteit\nVariabelen in R zijn mutabel. In R betekent dit dat gedurende de uitvoer van een programma zowel de waarde als het type van de variabele kan veranderen.\n# Voorbeeld mutabiliteit \nx &lt;- 5\nx &lt;- x + 1\nprint(x)\n\n# Voorbeeld type-conversie\ny &lt;- 1\ntypeof(y)\ny &lt;- \"test\"\ntypeof(y)\n\n\n2.1.2 Copy-on-modify\nZie verder onderstaande voorbeelden:\n5 -&gt; x\nx -&gt; y\nz &lt;- x\n\nprint(z)",
    "crumbs": [
      "Module 1 - Basis R",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Variablen, operatoren en functies.</span>"
    ]
  },
  {
    "objectID": "mod1_variables.html#operatoren",
    "href": "mod1_variables.html#operatoren",
    "title": "2  Variablen, operatoren en functies.",
    "section": "2.2 Operatoren",
    "text": "2.2 Operatoren\nEen operator is een symbool dat de programmeertaal vertelt om een bepaalde wiskundige, relationele of logische operatie uit te voeren tussen waarden of variabelen. Operatoren kunne worden ingedeeld in unaire operatoren (één input) en binaire operatoren (twee inputs).\n\n\n\n\n\nflowchart TD\n   X[Operators] --&gt; |&lt;small&gt;Eén input&lt;/small&gt;| U[Unair]\n   X --&gt; |&lt;small&gt;Twee inputs&lt;/small&gt;|B[Binair]\n   U --&gt; A[\"&lt;-\"]\n   U --&gt; H[\"?\"]\n   U --&gt; N[\"!\"]\n   U --&gt; S[\"...\"]\n   B --&gt; AR[\"+, -, /, ^\"]\n   B --&gt; LO[\"&, &&, |, ||\"]\n\n\n\n\n\n\nx &lt;- 1 # Toewijzen label 'x' aan waarde '1' in het geheugen \ny &lt;- 2 # idem. \n\n# Binaire operatoren: \nz &lt;- x + y # Optellen\nd &lt;- x * y # Vermenigvuldigen",
    "crumbs": [
      "Module 1 - Basis R",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Variablen, operatoren en functies.</span>"
    ]
  },
  {
    "objectID": "mod1_variables.html#functies",
    "href": "mod1_variables.html#functies",
    "title": "2  Variablen, operatoren en functies.",
    "section": "2.3 Functies",
    "text": "2.3 Functies\nEen functie is een herbruikbaar blok code dat een specifieke taak uitvoert. Functies zijn fundamenteel voor het structureren van code: ze maken het mogelijk complexe problemen op te delen in kleinere taken. Een functie kan nul of meer parameters (ook bekend als argumenten) als input aannemen. Een functie kan een resultaat teruggeven, een handeling uitvoeren (een zogeheten side-effect), of beide.\n\n2.3.1 Voorbeeld\nf &lt;- function(x,y){\n    return(x+1)\n}\n\nf(1) \nDe expressie f(1) retourneert 2. Merk op dat het argumen y niet is gespecificeerd. Dit is echter geen probleem, zolang de functie f dit argument niet daaderkelijk gebruikt. In R geldt dat functie-argumenten pas worden uitgevoerd (=geëvalueerd) zodra ze daadwerkelijk gebruikt worden (lazy-evaluation).\n\n\n2.3.2 Defaults\nHet is mogelijk om in R een standaardwaarde mee te geven aan een functie:\nf &lt;- function(x,y = 1){\n    return(x+y)\n}\n\nf(1)\nEen veelvoorkomende techniek is om standaardwaarden te controleren aan de hand van een lijst met standaardwaarden:\nf &lt;- function(x, y = c(1,2,3)){\n    y &lt;- match.arg(y)\n    print(y)\n}\nBovenstaande zorgt ervoor dat het argument y altijd een waarde van 1, 2, of 3 heeft.\n\n\n2.3.3 Operatoren als functie\nIn R hebben alle operatoren ook een functionele-vorm. De binaire +-operator is in weze niks anders dan een functie met twee argumenten. De functionele vorm van de +-operator is `+`(x,y).\nZie onderstaande voorbeelden:",
    "crumbs": [
      "Module 1 - Basis R",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Variablen, operatoren en functies.</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introductie",
    "section": "",
    "text": "Welkom bij de cursus R en Shiny. Deze cursus heeft als doel om jouw kennis van R en Shiny op het gebied van data-analyse en visualisatie te verrijken.\nGedurende deze cursus zullen we eenvoudige en meer geavanceerde R-technieken behandelen, evenals hun toepassing bij het opzetten van Shiny dashboards. Aan de hand van praktijkvoorbeelden en casestudies begeleiden we u bij het ontwikkelen van uw eigen projecten, variërend van simpele apps die data in realtime visualiseren tot complexe applicaties met uitgebreide gebruikersinteracties.\nDe cursus is opgedeeld in verschillende modules:\n\nModule 1 geeft een introductie in de basisprincipes van R. Onze ervaring is dat veel van wat hier besproken wordt de meeste datawetenschappers bekend in de oren zal klinken. Evenwel raden wij aan deze module met zorg door te werken.\nModule 2 gaat in op databewerking met het data.table package. Degenen die al enige ervaring met R hebben, zullen merken dat de wijze waarop wij data handling uitvoeren afwijkt van de gangbare praktijk (i.e., tidyverse). Kort gezegd: wij kiezen er bewust voor alle data handling met het data.table package uit te voeren, omdat dit package voor het bouwen van Shiny dashboards superieure performance levert.\nModule 3 gaat in op het maken van grafieken met het plotly package. Hier hebben wij wederom en keuze gemaakt uit de vele verschillende mogelijkheden die R biedt.\nModule 4 behandelt enkele meer geavanceerde R technieken die wij gebruiken bij het opstellen van Shiny dashboards.\nModule 5 behandelt de basisprincipes van Shiny\nModule 6 gaat in op het modulair opzetten van een Shiny dashboard",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introductie</span>"
    ]
  }
]